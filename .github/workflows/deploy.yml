on:
    push:
        branches:
            - deploy
            - main
    pull_request:
        branches:
            - main
    workflow_dispatch:
jobs:
    deploy:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
            - name: Set up Terraform
              uses: hashicorp/setup-terraform@v3
              with:
                terraform_version: 1.5.0
            - name: Terraform Init
              run: terraform init
              working-directory: terraform
            - name: Terraform Plan
              run: terraform plan -out=tfplan
            - name: Terraform Apply
              run: terraform apply -auto-approve tfplan -var="key-name=${{ secrets.AWS_KEY_NAME }}" -var="aws_secret_key=${{ secrets.AWS_PRIVATE_KEY }}"
            - name: Get EC2 IP
              id: ec2ip
              run: |
                echo "EC2_IP=$(terraform output -raw instance_ip)" >> $GITHUB_ENV
              working-directory: terraform
            - name: Deploy Docker Container via SSH
              uses: appleboy/ssh-action@master
              with:
                host: ${{ env.EC2_IP }}
                username: ubuntu
                key: ${{ secrets.EC2_PRIVATE_KEY }}
                script: |
                    docker pull my-docker-image:latest
                    docker stop telegram-bot || true
                    docker rm telegram-bot || true
                    docker run -d --name telegram-bot -p 80:80 my-docker-image:latest --restart -unless-stopped telegram-bot
            #- name: set up python
            #uses: actions/setup-python@v5
             #   with:
              #      python-version: '3.13'       
            


              # amazon/ubuntu/images/hvm-ssd-gp3/ubuntu-oracular-24.10-amd64-server-202503270
              # ami-0c1ac8a41498c1a9c